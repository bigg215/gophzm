// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: zones.sql

package database

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const addZip = `-- name: AddZip :one
INSERT INTO zones (
	id,
	createdat,
	updatedat,
	zipcode,
	zone,
	temprange,
	zonetitle
 )
 VALUES (
	$1,
	$2,
	$3,
	$4,
	$5,
	$6,
	$7
 )
 RETURNING id, createdat, updatedat, zipcode, zone, temprange, zonetitle
`

type AddZipParams struct {
	ID        uuid.UUID `json:"id"`
	Createdat time.Time `json:"createdat"`
	Updatedat time.Time `json:"updatedat"`
	Zipcode   string    `json:"zipcode"`
	Zone      string    `json:"zone"`
	Temprange string    `json:"temprange"`
	Zonetitle string    `json:"zonetitle"`
}

func (q *Queries) AddZip(ctx context.Context, arg AddZipParams) (Zone, error) {
	row := q.db.QueryRowContext(ctx, addZip,
		arg.ID,
		arg.Createdat,
		arg.Updatedat,
		arg.Zipcode,
		arg.Zone,
		arg.Temprange,
		arg.Zonetitle,
	)
	var i Zone
	err := row.Scan(
		&i.ID,
		&i.Createdat,
		&i.Updatedat,
		&i.Zipcode,
		&i.Zone,
		&i.Temprange,
		&i.Zonetitle,
	)
	return i, err
}
